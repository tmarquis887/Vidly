@model Vidly.ViewModels.CustomerListViewModel
@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

<table id="customers" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @*@foreach (var customer in Model)
        {
            <tr>
                <td>@Html.ActionLink(customer.Name, "Edit", "Customers", new { id = customer.Id }, null)</td>
                <td>@customer.MembershipType.Name</td>
                <td>
                    <button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button>
                </td>
            </tr>

        }*@
    </tbody>
</table>

@section scripts
{
    <script>
        $(document).ready(function () {
            @*This line of code applies datatables script to our table and saves it to a variable named table*@
            var table = $("#customers").DataTable({
                ajax: {
                    url: "/api/customers",
                    @*our datatable doesn't need to go to another object to get its info*@
                    dataSrc: ""
                },
                columns: [
                    {
                        @*This line tells the datatable plugin where to get the data for this column*@
                        data: "name",
                        @*custom function needed to allow us to edit a customer when we click their name.
                            The data property refers to the data type above
                            The second parameter is the type for this column
                            The third is the actual object or row you are rendering*@

                        render: function (data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "membershipType.name"
                    },
                    {
                        data: "id",
                        @*We want to have a functon that deletes the entry when clicked*@
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#customers").on("click", ".js-delete", function () {
                @*$(this) refers back to the parent object, in this case the jQuery object $("#customers")*@
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            @*method: POST, PUT, GET, DELETE, etc...*@
                            method: "DELETE",
                            success: function () {
                                @*We apply the row method on var table. In the row we select, we apply the remove and draw methods
                                    this completely removes it from our api*@
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}

@*
    <table style="width:100%">
        <tr>
            <th>Customers</th>
        </tr>
        <tr>
            <td>@Html.ActionLink("Doug Clarke", "Details", "Customers", new { Id = 1 }, null)</td>
        </tr>
        <tr>
            <td>@Html.ActionLink("Samantha Giroux", "Details", "Customers", new { Id = 2 }, null)</td>
        </tr>
        <tr>
            <td>@Html.ActionLink("Adam Smith", "Details", "Customers", new { Id = 3 }, null)</td>
        </tr>
    </table>
*@
